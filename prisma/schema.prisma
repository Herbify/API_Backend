datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id         Int       @id @default(autoincrement())
    name       String
    photo      String?
    email      String    @unique
    password   String
    status     Int       @default(0)
    verifiedAt DateTime?
    createdAt  DateTime  @default(now())
    updatedAt  DateTime  @updatedAt
    Otp        Otp[]
}

model Otp {
    id        Int      @id @default(autoincrement())
    code      Int?
    userId    Int
    expiredAt DateTime
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    user      User     @relation(fields: [userId], references: [id])
}

model Herbal {
    id             Int      @id @default(autoincrement())
    name           String
    scientificName String?
    image          String?
    description    String?  @db.Text
    benefit        String?
    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt
}

model Product {
    id          Int      @id @default(autoincrement())
    name        String
    description String   @db.Text
    image       String?
    ingredients String
    link        String?
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}

model UserActivities {
    id        Int      @id @default(autoincrement())
    userId    Int
    type      String
    activity  Json
    status    Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Articles {
    id        Int      @id @default(autoincrement())
    idUser    Int
    title     String
    photo     String?
    content   String?  @db.Text
    tag       Json?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Doctor {
    id         Int       @id @default(autoincrement())
    name       String
    photo      String?
    email      String    @unique
    password   String?
    status     Int       @default(0)
    verifiedAt DateTime?
    createdAt  DateTime  @default(now())
    updatedAt  DateTime  @updatedAt
}

model MessageGroup {
    id        Int      @id @default(autoincrement())
    group     Int
    status    Int      @default(0)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Message {
    id             Int      @id @default(autoincrement())
    messageGroupId Int
    sender         Int
    recipient      Int
    fromUser       Boolean  @default(true)
    content        String?  @db.Text
    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt
}
